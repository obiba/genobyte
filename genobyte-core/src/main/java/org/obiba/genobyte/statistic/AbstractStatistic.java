/*******************************************************************************
 * Copyright 2007(c) Genome Quebec. All rights reserved.
 * <p>
 * This file is part of GenoByte.
 * <p>
 * GenoByte is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 * <p>
 * GenoByte is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * <p>
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *******************************************************************************/
package org.obiba.genobyte.statistic;

import java.util.LinkedList;
import java.util.List;
import java.util.Map;

/**
 * Offers a skeleton to all statistics that can be used in the GenoByte's statistical module.
 */
public abstract class AbstractStatistic {
  /**
   * List of names for parameters required to compute this statistic.
   */
  protected List<String> inputParams_ = new LinkedList<String>();

  /**
   * List of names for fields required to compute this statistic.
   */
  protected List<String> inputFields_ = new LinkedList<String>();

  /**
   * Map of outputed values and the type of that value.
   */
  protected List<String> outputParams_ = new LinkedList<String>();

  /**
   * Returns the list of parameter names needed by the statistic, to be fetched from the data pool.
   *
   * @return the list of required input parameters.
   */
  public List<String> getInputParams() {
    return inputParams_;
  }

  /**
   * Returns the list of field names needed by the statistic, to be fetched from the <tt>GenotypingStore</tt> fields.
   *
   * @return the list of required input fields.
   */
  public List<String> getInputFields() {
    return inputFields_;
  }

  /**
   * Returns the list of parameters generated by the calculation of this statistic.
   *
   * @return the list of generated parameters.
   */
  public List<String> getOutputParams() {
    return outputParams_;
  }

  /**
   * Makes sure that all required parameters for a statistic have been provided.
   */
  protected void validateParams(Map<String, Object> pParams) {
    if (!(getInputParams().containsAll(pParams.keySet()))) {
      throw new RuntimeException("A required parameter for the calculation is missing.");
    }
  }

}
